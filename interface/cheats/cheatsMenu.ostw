import "../menu.ostw";

enum CheatAction {
  NONE = 0,
  FULL_HEAL,
  RESET_COOLDOWNS,
  FILL_ULT,
  INSTANT_ULT,
  INSTANT_COOLDOWNS
}

playervar CheatAction cheatActionID;
playervar Boolean[] ActiveCheat;

CheatAction[] cheatActions: [
  CheatAction.FULL_HEAL, CheatAction.RESET_COOLDOWNS, CheatAction.NONE, CheatAction.NONE,
  CheatAction.NONE,      CheatAction.NONE,            CheatAction.NONE, CheatAction.NONE,
  CheatAction.NONE,      CheatAction.NONE,            CheatAction.NONE, CheatAction.NONE,
  CheatAction.NONE,      CheatAction.NONE,            CheatAction.NONE, CheatAction.NONE
];
CheatAction[] CheatActionGrid: ActionGrid[MenuState.CHEATS];

void CreateCheatButtons() {
  # Create main menu button
  menuButton("Cheats", 0, 0, MenuState.MAIN_MENU, Color.Purple);
  menuButton("Full Heal", 0, 0, MenuState.CHEATS, Color.Yellow);
  menuButton("Reset Cooldowns", 1, 0, MenuState.CHEATS, Color.Yellow);
}

void HandleCheatClick() {
  AbortIf(CheatActionGrid[currentGridIndex()] == 0);
  cheatActionID = CheatActionGrid[currentGridIndex()];
  MinWait();
  cheatActionID = null;
}

rule: "[Cheats] Full heal handler"
Event.OngoingPlayer
if (cheatActionID == CheatAction.FULL_HEAL)
{
  SetPlayerHealth(EventPlayer(), MaxHealth());
  PlayEffect(EventPlayer(), PlayEffect.BuffImpactSound, null, PositionOf(), 200);
  SmallMessage(EventPlayer(), "Health restored");
}

rule: "[Cheats] Reset cooldowns handler"
Event.OngoingPlayer
if (cheatActionID == CheatAction.RESET_COOLDOWNS)
{
  SetAmmo(EventPlayer(), 0, MaxAmmo(EventPlayer(), 0));
  SetAmmo(EventPlayer(), 1, MaxAmmo(EventPlayer(), 1));
  SetAbilityCooldown(EventPlayer(), Button.PrimaryFire, 0);
  SetAbilityCooldown(EventPlayer(), Button.SecondaryFire, 0);
  SetAbilityCooldown(EventPlayer(), Button.Ability1, 0);
  SetAbilityCooldown(EventPlayer(), Button.Ability2, 0);
  SetAbilityCooldown(EventPlayer(), Button.Crouch, 0);
  switch (HeroOf()) {
    case Hero.Dva:
      SetAbilityResource(EventPlayer(), Button.SecondaryFire, 100);
      break;
    case Hero.Reinhardt:
      # Doesn't work right now lole
      SetAbilityCharge(EventPlayer(), Button.Ability2, 2);
      break;
    case Hero.Zarya:
      # Doesn't work right now lole
      SetAbilityCharge(EventPlayer(), Button.Ability1, 2);
      break;
    case Hero.Junkrat:
      SetAbilityCharge(EventPlayer(), Button.Ability1, 2);
      break;
    case Hero.Symmetra:
      SetAbilityCharge(EventPlayer(), Button.Ability1, 3);
      break;
    case Hero.Brigitte:
      SetAbilityCharge(EventPlayer(), Button.Ability2, 3);
      break;
  }
  PlayEffect(EventPlayer(), PlayEffect.BuffImpactSound, null, PositionOf(), 200);
  SmallMessage(EventPlayer(), "Cooldowns reset");
}

