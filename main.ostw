// import "settings.lobby";
settings
{
    main
    {
        Mode Name: "CactusPuppy's Toolbox"
        Description: "CactusPuppy's Toolbox | v1.0.0
Code: OVVVC

A set of tools that make custom games more useful for recreating, testing, and recording Overwatch scenarios."
    }
    modes
    {
        General
        {
            Hero Limit: 1 Per Team
            Game Mode Start: Immediately
            Tank Role Passive Health Bonus: Disabled
            Limit Roles: 1 Tank 2 Offense 2 Support
        }

        Hybrid {
            Competitive Rules: On
        }

        Clash {
            Competitive Rules: On
        }
    }
    lobby
    {
        Match Voice Chat: Enabled
    }
}

import "UndoTankHealthReduction.ostw";
import "interface/menu.ostw";
import "lib/logs/logs.del";

String GeneralSettingsCategory: "01. General";
String HeroSettingsCategory: "02. Hero Settings";
String MenuSettingsCategory: "03. Menu Settings";
String ModSettingsCategory: "04. Mod Settings";
String InformationCategory: "05. Information";
String BotAndReplaySettingsCategory: "06. Bot and Replay";
String DebugSettingsCategory: "19. Debug";

globalvar Number i;

// DEBUG: Diagnostics
// import "./OSTWUtils/Diagnostics.del";
// rule: "[DEBUG | main.ostw] Show diagnostics"
// {
//   new Diagnostics(
//     ShowEntityCount: true,
//     ShowTextCount: true,
//     ShowServerLoad: true,
//     ShowServerLoadAverage: true,
//     ShowServerLoadPeak: true);
//   // printMenuValues();
// }
// import "interface/dummyBotsAndReplay/replay/magzie_echo_recorder.del";

globalvar Boolean INSPECTOR_DISABLED! = !WorkshopSettingToggle(DebugSettingsCategory, "Enable Inspector Recording", true);
rule: "[main.ostw] Disable Inspector Recording" -100
if (INSPECTOR_DISABLED)
{
  DisableInspectorRecording();
}

rule: "[main.ostw] Skip assembling heroes"
if (IsAssemblingHeroes())
{
  if (AllPlayers().All(p => p.toolsActionID != ToolsAction.RETURN_TO_ASSEMBLING_HEROES)) {
    SetMatchTime(WorkshopSettingInteger(GeneralSettingsCategory, "Assembling Heroes Length", 5, 0, 30));
  }
  if (isTimePaused) {
    UnpauseMatchTime();
    isTimePaused = false;
    WaitUntil(!IsAssemblingHeroes(), 9999);
    PauseMatchTime();
    isTimePaused = true;
  }
}

rule: "[main.ostw] pause match time on start of round"
if (WorkshopSettingToggle(GeneralSettingsCategory, "Automatically Pause Match Time At Round Start", true))
if (!IsAssemblingHeroes())
{
  PauseMatchTime();
  isTimePaused = true;
}

rule: "[main.ostw] Go back to lobby early, skipping victory poses and POTG"
if (WorkshopSettingToggle(GeneralSettingsCategory, "Skip Post-Match Flow", true))
if (IsMatchComplete())
{
  Wait(3);
  ReturnToLobby();
}

rule: "[main.ostw] Avoid getting people stuck in menu"
Event.OngoingPlayer
if (IsBetweenRounds())
{
  CloseMenu(EventPlayer());
}

rule: "[main.ostw] Skip setup"
if (WorkshopSettingToggle(GeneralSettingsCategory, "Automatically Skip Setup", true))
if (IsInSetup())
{
  SetMatchTime(0);
  if (isTimePaused) {
    UnpauseMatchTime();
    isTimePaused = false;
    WaitUntil(!IsInSetup(), 9999);
    PauseMatchTime();
    isTimePaused = true;
  }
}

// DEBUG
rule: "[main.ostw] self-damage on melee"
Event.OngoingPlayer
if (WorkshopSettingToggle(GeneralSettingsCategory, "Self-Damage On Melee", false))
if (IsMeleeing())
{
  Damage(EventPlayer(), null, 75);
}

// import "voicelineFarmingModule.ostw";
