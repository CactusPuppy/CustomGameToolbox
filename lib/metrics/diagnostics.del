Color[] gradientColors: [Color.Green, Color.LimeGreen, Color.Yellow, Color.Orange, Color.Red];
import "../../OSTWUtils/Colors.del";
// String DebugSettingsCategory: "99. Debug";

void CreateDiagnostic(in String Text, in Color Color, in Number SortOrder) {
  CreateHudText(
    VisibleTo:      HostPlayer(),
    Subheader:      Text,
    Location:       Location.Right,
    SubheaderColor: Color,
    SortOrder:      SortOrder,
    Reevaluation:   HudTextRev.VisibleToStringAndColor,
    Spectators:     Spectators.VisibleAlways
  );
}

rule: "[DEBUG | main.ostw] Show diagnostics"
if (WorkshopSettingToggle(DebugCategory, "Show Diagnostics", false))
{
  CreateDiagnostic(
    Text:           "[ {0} ]  Server Load".Format([ServerLoad()]),
    Color:          Colors.StepGradient(gradientColors, ServerLoad()/255),
    SortOrder:      1);
  CreateDiagnostic(
    Text:           "[ {0} ]  Server Load Average".Format([ServerLoadAverage()]),
    Color:          Colors.StepGradient(gradientColors, ServerLoadAverage()/255),
    SortOrder:      2);
  CreateDiagnostic(
    Text:           "[ {0} ]  Server Load Peak".Format([ServerLoadPeak()]),
    Color:          Colors.StepGradient(gradientColors, ServerLoadPeak()/255),
    SortOrder:      3);
  CreateDiagnostic(
    Text:           <"[ <0> / <1> ]  Entity Count", EntityCount(), 128>,
    Color:          Colors.StepGradient(gradientColors, EntityCount()/128),
    SortOrder:      4);
  CreateDiagnostic(
    Text:           <"[ <0> / <1> ]  Text Count", TextCount(), 128>,
    Color:          Colors.StepGradient(gradientColors, TextCount() / 128),
    SortOrder:      5);
  CreateDiagnostic(
    Text:           <"[ <0> / <1> ]  Dummy Bot Count", DummyBotCount(), 12 - HumanAndAICount()>,
    Color:          Colors.StepGradient(gradientColors, DummyBotCount() / (12 - HumanAndAICount())),
    SortOrder:      6);
  CreateDiagnostic(
    Text:           <"DIST: <0> | ANG: <1>", LocalPlayer().thirdPersonDistance, LocalPlayer().thirdPersonPosAngle>,
    Color:          Color.White,
    SortOrder:      7
  );
  CreateDiagnostic(
    Text:           <"POLAR: <0> | AZIM: <1>", LocalPlayer().thirdPersonFacPolar, LocalPlayer().thirdPersonFacAzim>,
    Color:          Color.White,
    SortOrder:      8
  );
}
